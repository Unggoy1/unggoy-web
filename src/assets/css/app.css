/*
/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/
*,
::before,
::after {
	box-sizing: border-box;
	/* 1 */
	border-width: 0;
	/* 2 */
	border-style: solid;
	/* 2 */
	border-color: #e5e7eb;
	/* 2 */
}
::before,
::after {
	--tw-content: '';
}

body {
	margin: 0;
	/* 1 */
	line-height: inherit;
	/* 2 */
}
/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/
hr {
	height: 0;
	/* 1 */
	color: inherit;
	/* 2 */
	border-top-width: 1px;
	/* 3 */
}
/*
/*
Reset links to optimize for opt-in styling instead of opt-out.
*/
a {
	color: inherit;
	text-decoration: inherit;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/
button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
	-webkit-appearance: button;
	/* 1 */
	background-color: transparent;
	/* 2 */
	background-image: none;
	/* 2 */
}
/*
Use the modern Firefox focus style for all focusable elements.
*/
:-moz-focusring {
	outline: auto;
}
/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/
:-moz-ui-invalid {
	box-shadow: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/
::-webkit-file-upload-button {
	-webkit-appearance: button;
	/* 1 */
	font: inherit;
	/* 2 */
}
/*
Prevent resizing textareas horizontally by default.
*/
textarea {
	resize: vertical;
}

/*
Set the default cursor for buttons.
*/
button,
[role='button'] {
	cursor: pointer;
	border: none;
}
/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
	cursor: default;
}

.absolute {
	position: absolute;
}
.relative {
	position: relative;
}
.right-0 {
	right: 0px;
}
.top-16 {
	top: 4rem;
}
.z-20 {
	z-index: 20;
}
.mr-2 {
	margin-right: 0.5rem;
}
.mt-2 {
	margin-top: 0.5rem;
}
.inline-block {
	display: inline-block;
}
.flex {
	display: flex;
}
.inline-flex {
	display: inline-flex;
}
.contents {
	display: contents;
}
.h-5 {
	height: 1.25rem;
}
.w-5 {
	width: 1.25rem;
}
.w-56 {
	width: 14rem;
}
.w-full {
	width: 100%;
}
.origin-top-right {
	transform-origin: top right;
}
.flex-col {
	flex-direction: column;
}
.items-center {
	align-items: center;
}
.justify-center {
	justify-content: center;
}
.divide-y > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-y-reverse: 0;
	border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
	border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}
.divide-gray-100 > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-opacity: 0.1;
	border-color: rgb(243 244 246 / var(--tw-divide-opacity));
}
.rounded-md {
	border-radius: 10px;
}
.bg-black {
	--tw-bg-opacity: 0.05;
	background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}
.bg-white {
	--tw-bg-opacity: 1;
	background-color: var(--top-container-bg);
	color: #dee3e5;
}
.bg-opacity-20 {
	--tw-bg-opacity: 0.2;
}
.bg-opacity-30 {
	--tw-bg-opacity: 0.3;
}
.px-1 {
	padding-left: 0.25rem;
	padding-right: 0.25rem;
}
.px-2 {
	padding-left: 0.5rem;
	padding-right: 0.5rem;
}
.px-4 {
	padding-left: 1rem;
	padding-right: 1rem;
}
.py-1 {
	padding-top: 0.25rem;
	padding-bottom: 0.25rem;
}
.py-2 {
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}
.text-left {
	text-align: left;
}
.text-right {
	text-align: right;
}
.text-sm {
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.font-medium {
	font-weight: 500;
}
.text-gray-900 {
	--tw-text-opacity: 1;
	color: rgb(17 24 39 / var(--tw-text-opacity));
}
.text-white {
	--tw-text-opacity: 1;
	color: rgb(255 255 255 / var(--tw-text-opacity));
}
.shadow-lg {
	--tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
	--tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),
		0 4px 6px -4px var(--tw-shadow-color);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
		var(--tw-shadow);
}
.outline-none {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.ring-1 {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width)
		var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width))
		var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.ring-black {
	--tw-ring-opacity: 1;
	--tw-ring-color: rgb(0 0 0 / var(--tw-ring-opacity));
}
.ring-opacity-5 {
	--tw-ring-opacity: 0.05;
}
.hover\:bg-opacity-30:hover {
	--tw-bg-opacity: 0.3;
}
.focus\:outline-none:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.focus-visible\:ring-2:focus-visible {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width)
		var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width))
		var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.focus-visible\:ring-white:focus-visible {
	--tw-ring-opacity: 1;
	--tw-ring-color: rgb(255 255 255 / var(--tw-ring-opacity));
}
.focus-visible\:ring-opacity-75:focus-visible {
	--tw-ring-opacity: 0.75;
}
